/*
 * Copyright 2010. 
 * 
 * This document may not be reproduced, distributed or used 
 * in any manner whatsoever without the expressed written 
 * permission of Boventech Corp. 
 * 
 * $Rev: Rev $
 * $Author: Author $
 * $LastChangedDate: LastChangedDate $
 *
 */

package com.boventech.demo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.boventech.demo.entity.KnowledgePoint;
import com.boventech.demo.entity.Question;
import com.boventech.demo.service.KnowledgePointService;
import com.boventech.demo.service.QuestionService;
import com.boventech.demo.util.Paging;
import com.google.common.base.Strings;

/**
 * 题库管理Controller
 * @author liang.zhou
 */
@Controller
@RequestMapping(value = "/questionbank")
public class QuestionBankController {
    
    @Autowired
    private QuestionService questionService;
    
    @Autowired
    private KnowledgePointService knowledgePointService;
    
    @RequestMapping(method = RequestMethod.GET)
    public String index(String type, String difficultyOrder, String knowledgePointId, String content, 
            Paging paging, Model model) {
        if (difficultyOrder == null)
            difficultyOrder = "desc";
        KnowledgePoint knowledgePoint = null;
        if (!Strings.isNullOrEmpty(knowledgePointId))
            knowledgePoint = knowledgePointService.getById(knowledgePointId);
        List<Question> questionList = questionService.search(type, difficultyOrder, knowledgePoint, content, paging);
        List<KnowledgePoint> knowledgePointList = knowledgePointService.findAll();
        
        model.addAttribute("type", type);
        model.addAttribute("difficultyOrder", difficultyOrder);
        model.addAttribute("knowledgePointId", knowledgePointId);
        model.addAttribute("content", content);
        model.addAttribute("questionList", questionList);
        model.addAttribute("knowledgePointList", knowledgePointList);
        return "questionBank/index";
    }

}
