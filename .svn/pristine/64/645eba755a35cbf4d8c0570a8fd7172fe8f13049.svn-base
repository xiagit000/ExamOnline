/*
 * Copyright 2010. 
 * 
 * This document may not be reproduced, distributed or used 
 * in any manner whatsoever without the expressed written 
 * permission of Boventech Corp. 
 * 
 * $Rev$
 * $Author$
 * $LastChangedDate$
 *
 */

package com.boventech.demo.entity;

import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinTable;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

@Entity
@Table(name = "question")
public class Question {
    public enum Type {

        MULTIPLE_CHOICE,

        SINGLE_CHOICE,

        RIGHT_OR_WRONG;

    }

    @Id
    private String id;

    // 问题内容
    private String content;

    // 类型
    private Type type;

    // 难易度
    private int difficulty;

    // 选项答案
    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "question")
    private List<Answer> answers;

    // 所包含的知识点
    @ManyToMany(cascade = CascadeType.REFRESH)
    @JoinTable(name = "question_knowledgePoint",
    inverseJoinColumns = @JoinColumn(name = "knowledgePoint_id",referencedColumnName = "id"),
    joinColumns = @JoinColumn(name = "question_id", referencedColumnName = "id"))
    private List<KnowledgePoint> knowledgePoints;

    /**
     * @return the id
     */
    public String getId() {
        return id;
    }

    /**
     * @param id
     *            the id to set
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * @return the content
     */
    public String getContent() {
        return content;
    }

    /**
     * @param content
     *            the content to set
     */
    public void setContent(String content) {
        this.content = content;
    }

    /**
     * @return the type
     */
    public Type getType() {
        return type;
    }

    /**
     * @param type
     *            the type to set
     */
    public void setType(Type type) {
        this.type = type;
    }

    /**
     * @return the difficulty
     */
    public int getDifficulty() {
        return difficulty;
    }

    /**
     * @param difficulty
     *            the difficulty to set
     */
    public void setDifficulty(int difficulty) {
        this.difficulty = difficulty;
    }

    /**
     * @return the answers
     */
    public List<Answer> getAnswers() {
        return answers;
    }

    /**
     * @param answers
     *            the answers to set
     */
    public void setAnswers(List<Answer> answers) {
        this.answers = answers;
    }

    /**
     * @return the knowledgePoint
     */
    public List<KnowledgePoint> getKnowledgePoint() {
        return knowledgePoints;
    }

    /**
     * @param knowledgePoint
     *            the knowledgePoint to set
     */
    public void setKnowledgePoint(List<KnowledgePoint> knowledgePoints) {
        this.knowledgePoints = knowledgePoints;
    }

}
