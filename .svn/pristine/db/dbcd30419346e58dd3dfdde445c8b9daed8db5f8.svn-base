/*
 * Copyright 2010. 
 * 
 * This document may not be reproduced, distributed or used 
 * in any manner whatsoever without the expressed written 
 * permission of Boventech Corp. 
 * 
 * $Rev: Rev $
 * $Author: Author $
 * $LastChangedDate: LastChangedDate $
 *
 */

package com.boventech.demo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.boventech.demo.entity.KnowledgePoint;
import com.boventech.demo.entity.TestQuestion;
import com.boventech.demo.service.KnowledgePointService;
import com.boventech.demo.service.TestQuestionService;
import com.boventech.demo.util.Paging;
import com.google.common.base.Strings;
import com.google.common.collect.Lists;

/**
 * 题库管理Controller
 * @author liang.zhou
 */
@Controller
@RequestMapping(value = "/questionbank")
public class QuestionBankController {
    
    @Autowired
    private TestQuestionService testQuestionService;
    
    @Autowired
    private KnowledgePointService knowledgePointService;
    
    @RequestMapping(method = RequestMethod.GET)
    public String index(TestQuestion testQuestion, String difficultyOrder, String knowledgePointId,String knowledgePointContent,
            Paging paging, Model model) {
        if (difficultyOrder == null){
            difficultyOrder = "desc";
        }
        
        //知识点集合
        List<KnowledgePoint> knowledgePoints=Lists.newArrayList();
        KnowledgePoint knowledgePoint = null;
        if (!Strings.isNullOrEmpty(knowledgePointId)){
            String[] ids=knowledgePointId.split(";");
            for (String id : ids) {
                knowledgePoint = knowledgePointService.getById(id);
                knowledgePoints.add(knowledgePoint);
            }
        }
        
        List<TestQuestion> questionList = testQuestionService.search(testQuestion, difficultyOrder, knowledgePoints, paging);
        
        model.addAttribute("testQuestion", testQuestion);
        model.addAttribute("difficultyOrder", difficultyOrder);
        model.addAttribute("knowledgePointId", knowledgePointId);
        model.addAttribute("knowledgePointContent", knowledgePointContent);
        model.addAttribute("questionList", questionList);
        System.out.println("************");
        System.out.println(testQuestion.getType());
        return "questionBank/index";
    }

}
