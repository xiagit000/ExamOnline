/*
 * Copyright 2010. 
 * 
 * This document may not be reproduced, distributed or used 
 * in any manner whatsoever without the expressed written 
 * permission of Boventech Corp. 
 * 
 * $Rev: Rev $
 * $Author: Author $
 * $LastChangedDate: LastChangedDate $
 *
 */

package com.boventech.demo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.boventech.demo.entity.Answer;
import com.boventech.demo.entity.Exam;
import com.boventech.demo.service.ExamService;
import com.boventech.demo.service.TestService;
import com.boventech.demo.util.Paging;
import com.google.common.collect.Lists;

@Controller
@RequestMapping(value = "/test")
public class TestController {
    @Autowired
    private TestService testService;
    
    @Autowired
    private ExamService examService;
    
    

    /**
     *选择试卷
     */
    @RequestMapping(method = RequestMethod.GET)
    public String index(Exam exam, Paging paging, ModelMap model) {
        List<Exam> examList = this.examService.search(exam, paging);
        model.addAttribute("examList", examList);
        return "test/index";
    }
    
    /**
     * 测试
     */
    @RequestMapping(value = "{id}", method = RequestMethod.GET)
    public String show(ModelMap model, @PathVariable String id) {
        Exam exam = this.examService.findById(id);
        int [] examInfo=this.examService.getExamInfo(exam);
        model.addAttribute("exam", exam);
        model.addAttribute("choices", examInfo[0]);
        model.addAttribute("rightOrWrongs", examInfo[1]);
        model.addAttribute("combinations", examInfo[2]);
        return "/test/show";
    }

    /**
     * 提交答案并保存
     */
    @RequestMapping(method = RequestMethod.POST)
    public String save(String[] id, String[] answers) {
        List<Answer> testAnswers = Lists.newArrayList();
        for (int i = 0; i < id.length; i++) {
            Answer answer = new Answer();
            List<String> userAnswers = Lists.newArrayList();
            String questionId = id[i];
            String[] strs = answers[i].split(";");
            for (String userAnswer : strs) {
                userAnswers.add(userAnswer);
            }


            // 封装到Answer并加入集合
            testAnswers.add(answer);
        }
        return "redirect:/answer/testReport";
    }

    @RequestMapping(value = "/report", method = RequestMethod.GET)
    public String report(ModelMap model) {
        // model.addAttribute("answers", this.testAnswers);
        // 单例模式下不允许对全局List集合进行操作！
        return "answer/report/index";
    }
}
