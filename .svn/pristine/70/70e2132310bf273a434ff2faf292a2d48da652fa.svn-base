/*
 * Copyright 2010. 
 * 
 * This document may not be reproduced, distributed or used 
 * in any manner whatsoever without the expressed written 
 * permission of Boventech Corp. 
 * 
 * $Rev$
 * $Author$
 * $LastChangedDate$
 *
 */

package com.boventech.demo.entity;

import java.io.Serializable;
import java.util.Date;
import java.util.HashMap;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;

/**
 * 答题记录
 * 
 * @author Blue
 * 
 */
@Entity
@Table(name = "answerRecored")
public class AnswerRecord implements Serializable {

    private static final long serialVersionUID = 1L;

    @Id
    @GenericGenerator(name = "hibernate-uuid", strategy = "uuid")
    @GeneratedValue(generator = "hibernate-uuid")
    private String id;

    /**
     * 所答试卷
     */
    @ManyToOne(cascade = CascadeType.REFRESH)
    @JoinColumn(name = "exam_id")
    private Exam exam;

    /**
     * 所答题的记录
     */
    @OneToMany(cascade = CascadeType.ALL)
    @JoinColumn(name = "record_id")
    private List<UserAnswer> userAnswers;

    /**
     * 正确率
     */
    private double accuracy;

    /**
     * 答题人
     */
    /*
     * @ManyToOne(cascade={CascadeType.MERGE,CascadeType.REFRESH})
     * 
     * @JoinColumn(name="user_id") private User user;
     */

    /**
     * 最后答题时间
     */
    private Date createDate;

    /**
     * @return the id
     */
    public String getId() {
        return id;
    }

    /**
     * @param id
     *            the id to set
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * @return the exam
     */
    public Exam getExam() {
        return exam;
    }

    /**
     * @param exam
     *            the exam to set
     */
    public void setExam(Exam exam) {
        this.exam = exam;
    }

    /**
     * @return the userAnswers
     */
    public List<UserAnswer> getUserAnswers() {
        return userAnswers;
    }

    /**
     * @param userAnswers
     *            the userAnswers to set
     */
    public void setUserAnswers(List<UserAnswer> userAnswers) {
        this.userAnswers = userAnswers;
    }

    /**
     * @param accuracy
     *            the accuracy to set
     */
    public void setAccuracy() {
        double score = 0;
        if (this.userAnswers.size() > 0) {
            for (UserAnswer userAnswer : userAnswers) {
                score += userAnswer.getAccuracy();
            }
            this.accuracy = score / this.userAnswers.size();
        }
    }

    /**
     * @return the accuracy
     */
    public double getAccuracy() {
        return accuracy;
    }

    /**
     * @return the createDate
     */
    public Date getCreateDate() {
        return createDate;
    }

    /**
     * @param createDate
     *            the createDate to set
     */
    public void setCreateDate(Date createDate) {
        this.createDate = createDate;
    }

    /*
     * public User getUser() { return user; }
     * 
     * public void setUser(User user) { this.user = user; }
     */

    public HashMap<String, Double> getKnowledgeData() {
        HashMap<String, Double> map = new HashMap<String, Double>();
        for (UserAnswer userAnswer : this.userAnswers) {
            for (KnowledgePoint knowledgePoint : userAnswer.getQuestion().getKnowledgePoints()) {
                if (map.containsKey(knowledgePoint.getContent())) {
                    map.put(knowledgePoint.getContent(),
                            map.get(knowledgePoint.getContent()) + userAnswer.getAccuracy());
                } else {
                    map.put(knowledgePoint.getContent(), 0.0);
                }
            }
        }
        return map;
    }

}
